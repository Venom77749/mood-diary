import tkinter as tk
from datetime import datetime, timedelta

class MoodTrackerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Mood Tracker")

        self.colors = {'Happy': 'yellow', 'Sad': 'blue', 'Excited': 'green', 'Angry': 'red', 'Neutral': 'white'}

        self.create_gui()

    def create_gui(self):
        self.canvas = tk.Canvas(self.root, width=350, height=400)
        self.canvas.pack()

        self.selected_color = tk.StringVar()
        self.selected_color.set('Happy')  # Default mood

        color_label = tk.Label(self.root, text="Select Mood:")
        color_label.pack()

        color_menu = tk.OptionMenu(self.root, self.selected_color, *self.colors.keys())
        color_menu.pack()

        submit_button = tk.Button(self.root, text="Submit", command=self.paint_day)
        submit_button.pack()

        save_button = tk.Button(self.root, text="Save", command=self.save_data)
        save_button.pack()

        # Create 30 rectangles representing days
        self.day_rectangles = []
        for day in range(30):
            x = (day % 6) * 50
            y = (day // 6) * 50
            width = 50
            height = 50
            rectangle = self.canvas.create_rectangle(x, y, x + width, y + height, outline='black', fill='white')
            self.day_rectangles.append(rectangle)

            # Add day of the month
            day_label = tk.Label(self.root, text=str(day + 1))
            day_label.place(x=x + 25, y=y + 25, anchor="center")

        # Display days of the week
        days_of_week = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
        for i, day in enumerate(days_of_week):
            x = i * 50
            day_label = tk.Label(self.root, text=day)
            day_label.place(x=x + 25, y=0, anchor="center")

        # Bind the event to the canvas
        self.canvas.bind("<Button-1>", self.on_canvas_click)

    def on_canvas_click(self, event):
        x, y = event.x, event.y
        item = self.canvas.find_closest(x, y)
        selected_color = self.selected_color.get()
        self.canvas.itemconfig(item, fill=self.colors[selected_color])

    def paint_day(self):
        pass  # Remove this method as it's no longer needed

    def save_data(self):
        for day, rectangle in enumerate(self.day_rectangles):
            color = self.canvas.itemcget(rectangle, 'fill')
            print(f"Day {day + 1}: {self.get_mood_from_color(color)}")

    def get_mood_from_color(self, color):
        for mood, mood_color in self.colors.items():
            if color == mood_color:
                return mood
        return "Unknown"

if __name__ == "__main__":
    root = tk.Tk()
    app = MoodTrackerApp(root)
    root.mainloop()
